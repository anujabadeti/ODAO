import static org.junit.Assert.*;
import static org.semanticweb.owlapi.search.EntitySearcher.getAnnotationObjects;
import static org.semanticweb.owlapi.search.Searcher.annotationObjects;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.util.*;

import javax.annotation.Nonnull;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;
import org.semanticweb.owlapi.apibinding.OWLManager;
import org.semanticweb.owlapi.formats.OWLXMLDocumentFormat;
import org.semanticweb.owlapi.io.StreamDocumentTarget;
import org.semanticweb.owlapi.io.StringDocumentSource;
import org.semanticweb.owlapi.io.StringDocumentTarget;
import org.semanticweb.owlapi.model.*;
import org.semanticweb.owlapi.profiles.OWL2DLProfile;
import org.semanticweb.owlapi.profiles.OWLProfileReport;
import org.semanticweb.owlapi.profiles.OWLProfileViolation;
import org.semanticweb.owlapi.reasoner.*;
import org.semanticweb.owlapi.reasoner.structural.StructuralReasonerFactory;
import org.semanticweb.owlapi.util.*;
import org.semanticweb.owlapi.vocab.OWL2Datatype;
import org.semanticweb.owlapi.vocab.OWLFacet;
import org.semanticweb.owlapi.vocab.OWLRDFVocabulary;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Ontology{
    public static final IRL drugOnt = IRI
            .create("http://www.semanticweb.org/han3_lab/ontologies/2018/9/ODAO")
    OWLDataFactory df = OWLManager.getOWLDataFactory();

    public OWLOntologyManager create() {
        OWLOntologyManager manager = OWLManager
                .createOWLOntologyManager();
        manager.addIRIMapper(new AutoIRIMapper(new File("drugOntology", true));
        return manager;
    }

    private static OWLOntology loadPizzaOntology(@Nonnull OWLOntologyManager m) throws OWLOntologyCreationException {
        return m.loadOntologyFromOntologyDocument(new StringDocumentSource(Ontology));
    }

    public void addSubClassIllegalDrug() throws OWLOntologyCreationException, OWLOntologyStorageException  {
        OWLOntologyManager manager = OWLManager.createOWLOntologyManager();
        OWLOntology ontology = manager.loadOntologyFromOntologyDocument(new File("pathToFile");
        OWLDataFactory drugOntology = OWLManager.getOWLDataFactory();

        OWLClass drug = dataFactory.getOWLClass(IRI.create(baseIRI, "Drug");
        OWLClass illegalDrug = dataFactory.getOWLClass(IRI.create(baseIRI, "IllegalDrug");
        axiom = dataFactory.getOWLSubClassOfAxiom(drug, illegalDrug);

        Axiom addAxiom = new AddAxiom(ontology, axiom);

        manager.applyChange(addAxiom);
        manager.saveOntology(ontology);
    }

    public void addSubClassPrescriptionDrug() throws OWLOntologyCreationException, OWLOntologyStorageException  {
        OWLOntologyManager manager = OWLManager.createOWLOntologyManager();
        OWLOntology ontology = manager.loadOntologyFromOntologyDocument(new File("pathToFile");
        OWLDataFactory drugOntology = OWLManager.getOWLDataFactory();

        OWLClass drug = dataFactory.getOWLClass(IRI.create(baseIRI, "Drug");
        OWLClass prescriptionDrug = dataFactory.getOWLClass(IRI.create(baseIRI, "PrescriptionDrug");
        axiom = dataFactory.getOWLSubClassOfAxiom(drug, prescriptionDrug);

        Axiom addAxiom = new AddAxiom(ontology, axiom);

        manager.applyChange(addAxiom);
        manager.saveOntology(ontology);
    }


}
